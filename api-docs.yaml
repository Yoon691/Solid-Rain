openapi: 3.0.1
info:
  title: Mif13-grp22-api
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /users/{login}:
    get:
      tags:
      - user-controller
      summary: Récuperer un utilisateur
      operationId: getOne_1
      parameters:
      - name: login
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ' Opération réussie'
          content:
            text/html:
              schema:
                type: string
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: Utilisateur non trouvé
    put:
      tags:
      - rest-controller-jxu
      summary: Mettre à jour le password de l'utilisateur
      operationId: getUserResponseEntity
      parameters:
      - name: login
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "204":
          description: ' Password correctement modifié'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Paramètres de la requête non acceptables
        "404":
          description: Utilisateur non trouvé
    delete:
      tags:
      - rest-controller-jxu
      summary: Supprimer  l'utilisateur
      operationId: deleteUser
      parameters:
      - name: login
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Utilisateur supprimé
        "404":
          description: Utilisateur non trouvé
  /users:
    get:
      tags:
      - user-controller
      summary: Récuperer la liste des uttilisateurs
      operationId: getAll_1
      responses:
        "200":
          description: Operation réussie
          content:
            text/html:
              schema:
                type: string
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  type: string
            application/xml:
              schema:
                uniqueItems: true
                type: array
                items:
                  type: string
        "404":
          description: la liste des uttilisateurs est vide
    post:
      tags:
      - rest-controller-jxu
      summary: Créer un  utilisateur
      operationId: createUser
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "204":
          description: Utilisateur crée
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Paramètres de la requête non acceptables
        "401":
          description: Utilisateur non crée
  /login:
    post:
      tags:
      - operation-controller
      summary: Connexion utilisateur
      operationId: login
      parameters:
      - name: login
        in: query
        required: true
        schema:
          type: string
      - name: password
        in: query
        required: true
        schema:
          type: string
      - name: Origin
        in: header
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Utilisateur connecté
          headers:
            Authorization:
              description: token
              style: simple
              schema:
                type: string
        "400":
          description: Paramètres de la requête non acceptables
        "401":
          description: Utilisateur non authentifié
  /authenticate:
    get:
      tags:
      - operation-controller
      summary: Authentification utilisateur
      operationId: authenticate
      parameters:
      - name: token
        in: query
        required: true
        schema:
          type: string
      - name: origin
        in: query
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Utilisateur authentifé
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Paramètres de la requête non acceptables
        "401":
          description: Utilisateur non authentifié
  /logout:
    delete:
      tags:
      - operation-controller
      summary: Deconnexion de l'utilisateur connecté
      operationId: logout
      parameters:
      - name: login
        in: query
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Utilisateur deconecté
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
        "401":
          description: Utilisateur non authentifié
components:
  schemas:
    User:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
          writeOnly: true
        connected:
          type: boolean
